#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/functional.h>
#include <pybind11/numpy.h>

#include "examplelibcpp/examplelibcpp.h"

namespace py = pybind11;


// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// <litgen_glue_code>  // Autogenerated code below! Do not edit!

// </litgen_glue_code> // Autogenerated code end
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE END !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



void py_init_module_lg_examplelib(py::module& m)
{
    using namespace examplelib;
    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    // <litgen_pydef> // Autogenerated code below! Do not edit!
    ////////////////////    <generated_from:examplelibcpp.h>    ////////////////////
    auto pyClassFoo =
        py::class_<examplelib::Foo>
            (m, "Foo", "")
        .def(py::init<>([](
        int a = 1, std::string s = std::string())
        {
            auto r = std::make_unique<Foo>();
            r->a = a;
            r->s = s;
            return r;
        })
        , py::arg("a") = 1, py::arg("s") = std::string()
        )
        .def_readwrite("a", &Foo::a, "")
        .def_readwrite("s", &Foo::s, "")
        ;


    m.def("make_foo",
        examplelib::MakeFoo);
    ////////////////////    </generated_from:examplelibcpp.h>    ////////////////////

    // </litgen_pydef> // Autogenerated code end
    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  AUTOGENERATED CODE END !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
}
